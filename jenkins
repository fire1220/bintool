#!/bin/bash

configInit=$(cat <<!
# username=xxxx
# appToken=xxxx
# url=https://test-jenkins.xxxx.com
# 目录和pod name的对应关系
# podNameList=(
#     wm-light-backend=k8s-test-php-backend-new
#     wm-light-frontend=k8s-test-php-frontend-new
# )
# 目录和发布参数的对应关系
# paramList=(
#     wm-backend=backend_version
#     wm-backend=title
#     wm-frontend=frontend_version
# )
!
)

configPath="$HOME/.config/jenkins/.jenkinsrc"

declare -r dirName="$(basename "$(pwd)")"

function helpInit(){
    cat <<!
        command [-c] commitId

        第一次执行会自动生产一个配置文件:
            1.配置文件路径："$configPath"
            2.编辑该配置文件后就可以使用了

        参数：
            -c commitId(默认选项)

!
    exit 0
}

function main(){
    local commitId=""
    OPTIND=1
    while getopts ':c:h' opt;do
        case "$opt" in
            c)
                commitId="$OPTARG";;
            h)
                helpInit
                ;;
        esac
    done
    shift $(($OPTIND-1))

    if [ ! -f "$configPath" ];then
        if [ ! -d "$(dirname "$configPath")" ];then
            mkdir -p "$(dirname "$configPath")"
        fi
        echo "$configInit" > "$configPath"
    fi

    . "$configPath"
    if [[ "$username" == "" ]] || [[ "$appToken" == "" ]] || [[ "$url" == ""  ]] || [[ "$podNameList" == "" ]] || [[ "$paramList" == "" ]];then
        echo "请先编辑配置文件：$configPath"
        exit 0
    fi


    if [[ "$commitId" == "" ]];then
        commitId="$1"
    fi

    if [[ "$commitId" == "" ]];then
        echo >&2 "commitId 不能为空"
        exit 1
    fi
    local params=""
    for v in "${paramList[@]}";do
        local name="${v%%=*}"
        local paramKey="${v#*=}"
        if [[ "$name" != "$dirName" ]];then
            continue
        fi
        params="${params} --form '${paramKey}=\"${commitId}\"'"
    done

    local execStr=""
    for v in "${podNameList[@]}";do
        local name="${v%%=*}"
        local podName="${v#*=}"
        if [[ "$name" != "$dirName" ]];then
            continue
        fi
        execStr="curl -X POST -u ${username}:${appToken} ${url}/job/${podName}/buildWithParameters ${params}"
        echo "$execStr"
        eval "$execStr"
    done
    if [[ "$execStr" == "" ]];then
        echo "没有匹配到要构建的指令"
    fi
}

main $@
